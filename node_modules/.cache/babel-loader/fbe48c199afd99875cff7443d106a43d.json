{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { generateImageUrl, ImageSizes } from \"utils/tmdb\";\nimport tmdbApi from 'api/tmdb';\nimport userEvent from \"@testing-library/user-event\";\n\nfunction Banner() {\n  _s();\n\n  const [movie, setMovie] = useState({});\n  useEffect(() => {\n    // API call for the header\n    async function fetchMovie() {\n      const json = await tmdbApi.get('/discover/tv', {\n        with_networks: 213\n      });\n      console.log(\"JSON\", json);\n    }\n\n    fetchMovie();\n  }, []);\n}\n\n_s(Banner, \"vjn7l2Xfyv8U759KvgOto7g+Dfw=\");\n\n_c = Banner;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["/Users/vrinda/Desktop/netflix-react-clone/src/ui/Banner.js"],"names":["React","useState","useEffect","generateImageUrl","ImageSizes","tmdbApi","userEvent","Banner","movie","setMovie","fetchMovie","json","get","with_networks","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAjC;AACAC,EAAAA,SAAS,CACP,MAAI;AACF;AACA,mBAAeQ,UAAf,GAA2B;AACzB,YAAMC,IAAI,GAAG,MAAMN,OAAO,CAACO,GAAR,CAAY,cAAZ,EAA4B;AAACC,QAAAA,aAAa,EAAG;AAAjB,OAA5B,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,IAApB;AACD;;AACDD,IAAAA,UAAU;AACX,GARM,EAQL,EARK,CAAT;AAUD;;GAZQH,M;;KAAAA,M;AAcT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { generateImageUrl, ImageSizes } from \"utils/tmdb\";\nimport tmdbApi from 'api/tmdb';\nimport userEvent from \"@testing-library/user-event\";\n\nfunction Banner() {\n  const[movie, setMovie] = useState({});\n  useEffect(\n    ()=>{\n      // API call for the header\n      async function fetchMovie(){\n        const json = await tmdbApi.get('/discover/tv', {with_networks : 213})\n        console.log(\"JSON\", json)\n      }\n      fetchMovie();\n    },[]\n  )\n}\n\nexport default Banner;\n"]},"metadata":{},"sourceType":"module"}